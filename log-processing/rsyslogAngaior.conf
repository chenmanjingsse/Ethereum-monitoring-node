#  /etc/rsyslog.conf	Configuration file for rsyslog.
#
#			For more information see
#			/usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf


#################
#### MODULES ####
#################

module(load="imuxsock") # provides support for local system logging
#module(load="immark")  # provides --MARK-- message capability

# provides UDP syslog reception
#module(load="imudp")
#input(type="imudp" port="514")

# provides TCP syslog reception
#module(load="imtcp")
#input(type="imtcp" port="514")

# provides kernel logging support and enable non-kernel klog messages
module(load="imklog" permitnonkernelfacility="on")

module(load="mmrm1stspace")


###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Filter duplicated messages
$RepeatedMsgReduction on

#
# Set the default permissions for all log files.
#
$FileOwner syslog
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
$PrivDropToUser syslog
$PrivDropToGroup syslog

#
# Where to place spool and state files
#
$WorkDirectory /var/spool/rsyslog

#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf




#FROM HERE added by DV


# Need: (1) rsyslog 8.24+
#       (2) module: rsyslog-mmrm1stspace.x86_64
# try "rsyslog -n" that there are no errors while reading conf

#Templates
template(name="local-template" type="string"
        string="%msg%\n"
        )
#Set local-template template as default template
#$ActionFileDefaultTemplate local-template

#	peer (dis)connecting = 0x00  
#	NewBlockHashesMsg    = 0x01
#	TxMsg                = 0x02
#	BlockHead changes    = 0x03   
#	N / A                = 0x04
#	Invalid Messages     = 0x05  
#	N / A                = (0x06)
#	NewBlockMsg          = 0x07

#Outchannels

#0    Peer (dis)connecting = 0x00
$outchannel oc_peers, /mnt/ssd_1tb/dvavricka/logs/peers.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/peers.log

#1    NewBlockHashesMsg  = 0x01
$outchannel oc_blocksAnnouncements, /mnt/ssd_1tb/dvavricka/logs/blocksAnnouncements.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/blocksAnnouncements.log

#2    TxMsg              = 0x02
$outchannel oc_txs, /mnt/ssd_1tb/dvavricka/logs/txs.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/txs.log

#3    BlockHead        = 0x03
$outchannel oc_heads, /mnt/ssd_1tb/dvavricka/logs/heads.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/heads.log

#5    Invalid Messages        = 0x05
$outchannel oc_invalidmsgs, /mnt/ssd_1tb/dvavricka/logs/invalidmsgs.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/invalidmsgs.log

#6    unused
#$outchannel oc_blockbodies, /mnt/ssd_1tb/dvavricka/logs/blockbodies.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/blockbodies.log

#7    NewBlockMsg        = 0x07
$outchannel oc_blocks, /mnt/ssd_1tb/dvavricka/logs/blocks.log, 500000000, /mnt/ssd_1tb/dvavricka/log-rotate.sh /mnt/ssd_1tb/dvavricka/logs/blocks.log

if $programname == 'EMC-GETH' then {
      #del leading space (rfc3164 'bug')
      action(type="mmrm1stspace")

      if $syslogfacility-text == 'local0' then { #peer (dis)connecting = 0x00
            :omfile:$oc_peers;local-template
      }
      else if $syslogfacility-text == 'local1' then {      #NewBlockHashesMsg = 0x01
            :omfile:$oc_blocksAnnouncements;local-template
      }
      else if $syslogfacility-text == 'local2' then { #TxMsg            = 0x02
            :omfile:$oc_txs;local-template
      }
      else if $syslogfacility-text == 'local3' then { #BlockHead        = 0x03
            :omfile:$oc_heads;local-template
      }
      else if $syslogfacility-text == 'local5' then { #Invalid Messages = 0x05
            :omfile:$oc_invalidmsgs;local-template
      }
      #else if $syslogfacility-text == 'local6' then { #Block Bodies     = 0x06   (testing now)
      #      :omfile:$oc_blockbodies;local-template
      #}
      else if $syslogfacility-text == 'local7' then { #NewBlockMsg      = 0x07
            :omfile:$oc_blocks;local-template
      }
      stop
}
